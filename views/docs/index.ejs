<h1>Documentation</h1>

<ul>
  <li><a href="/docs/getting-started">Getting Started</a> : Guide to getting started with Pulse.</li>
  <li><a href="/docs/api">API Reference</a> : Complete class reference documentation.</li>
  <li><a href="/docs/using-debug-panel">Using the Debug Module</a> : Guide on how to utilize the debug module.</li>
  <li><a href="/docs/using-physics-module">Using the Physics Module</a> : Guide on how to utilize the physics module.</li>
</ul>

<h2>Video Guides</h2>
<ul>
  <li><a href="/docs/video-build-your-first-game">Build Your First Game</a> : Learn how get your first game off the ground.</li>
</ul>

<h2>External Articles</h2>

<ul>
  <li><a href="http://www.switchonthecode.com/tech-news/introduction-to-the-pulse-engine">Intro to Pulse Engine</a> : Tutorial from Switch On The Code about building a simple game with Pulse.</li>
</ul>

<h2>Code Sample</h2>

<caption><a href="/demos/hello-world" title="Hello World Demo Page">Hello World Demo</a></caption>
<pre>
<code data-language="javascript">
    // Hook the ready callback.
    pulse.ready(function() {
      // Create an engine.
      var engine = new pulse.Engine({
        gameWindow: 'helloWindow'
      });

      // Create a scene.
      var scene = new pulse.Scene();

      // Create a layer and add it to the scene.
      var layer = new pulse.Layer();
      layer.position = { x: 300, y : 200 };
      scene.addLayer(layer);

      // Create a label and add it to the layer.
      var label = new pulse.CanvasLabel({ text: 'Hello World!' });
      label.position = { x: 300, y: 200 };
      layer.addNode(label);

      // Add an activate the scene.
      engine.scenes.addScene(scene);
      engine.scenes.activateScene(scene);

      // Start the update and render loop.
      engine.go(30);
    });
</code>
</pre>
<script src="/js/rainbow-custom.min.js"></script>